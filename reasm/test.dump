  .file [ "test.cpp" ]
	__SP_H__ = 0x3e
	__SP_L__ = 0x3d
	__SREG__ = 0x3f
	__tmp_reg__ = 0
	__zero_reg__ = 1
  .stabs [ "/projects/tweakoz_github/zed64/reasm/" , 100 , 0 , 4 , .Ltext0 /* $0000 */ ]
  .stabs [ "test.cpp" , 100 , 0 , 4 , .Ltext0 /* $0000 */ ]
  .text [ ]

.Ltext0: /* $0000 */

  .stabs [ "gcc2_compiled." , 60 , 0 , 0 , 0 ]
  .stabs [ "__uint24:t(0,1)=@s24;r(0,1);0;077777777;" , 128 , 0 , 0 , 0 ]
  .stabs [ "__int24:t(0,2)=@s24;r(0,2);040000000;037777777;" , 128 , 0 , 0 , 0 ]
  .stabs [ "__builtin_va_list:t(0,3)=*(0,4)=(0,4)" , 128 , 0 , 0 , 0 ]
  .stabs [ "complex long double:t(0,5)=R3;8;0;" , 128 , 0 , 0 , 0 ]
  .stabs [ "complex double:t(0,6)=R3;8;0;" , 128 , 0 , 0 , 0 ]
  .stabs [ "complex float:t(0,7)=R3;8;0;" , 128 , 0 , 0 , 0 ]
  .stabs [ "complex int:t(0,8)=s4real:(0,9)=r(0,9);-32768;32767;,0,16;imag:(0,9),16,16;;" , 128 , 0 , 0 , 0 ]
  .stabs [ "long long unsigned int:t(0,10)=@s64;r(0,10);0;01777777777777777777777;" , 128 , 0 , 0 , 0 ]
  .stabs [ "long unsigned int:t(0,11)=@s32;r(0,11);0;037777777777;" , 128 , 0 , 0 , 0 ]
  .stabs [ "unsigned int:t(0,12)=r(0,12);0;0177777;" , 128 , 0 , 0 , 0 ]
  .stabs [ "unsigned char:t(0,13)=@s8;r(0,13);0;255;" , 128 , 0 , 0 , 0 ]
  .stabs [ "long long int:t(0,14)=@s64;r(0,14);01000000000000000000000;00777777777777777777777;" , 128 , 0 , 0 , 0 ]
  .stabs [ "long int:t(0,15)=@s32;r(0,15);020000000000;017777777777;" , 128 , 0 , 0 , 0 ]
  .stabs [ "int:t(0,9)" , 128 , 0 , 0 , 0 ]
  .stabs [ "signed char:t(0,16)=@s8;r(0,16);-128;127;" , 128 , 0 , 0 , 0 ]
  .stabs [ "char:t(0,17)=r(0,17);0;127;" , 128 , 0 , 0 , 0 ]
  .stabs [ "signed:t(0,9)" , 128 , 0 , 0 , 0 ]
  .stabs [ "__int128:t(0,18)=@s128;r(0,18);02000000000000000000000000000000000000000000;01777777777777777777777777777777777777777777;" , 128 , 0 , 0 , 0 ]
  .stabs [ "__int128 unsigned:t(0,19)=@s128;r(0,19);0;03777777777777777777777777777777777777777777;" , 128 , 0 , 0 , 0 ]
  .stabs [ "unsigned long:t(0,11)" , 128 , 0 , 0 , 0 ]
  .stabs [ "long long unsigned:t(0,10)" , 128 , 0 , 0 , 0 ]
  .stabs [ "short int:t(0,20)=r(0,20);-32768;32767;" , 128 , 0 , 0 , 0 ]
  .stabs [ "short unsigned int:t(0,21)=r(0,21);0;0177777;" , 128 , 0 , 0 , 0 ]
  .stabs [ "unsigned short:t(0,21)" , 128 , 0 , 0 , 0 ]
  .stabs [ "float:t(0,22)=r(0,9);4;0;" , 128 , 0 , 0 , 0 ]
  .stabs [ "double:t(0,23)=r(0,9);4;0;" , 128 , 0 , 0 , 0 ]
  .stabs [ "long double:t(0,24)=r(0,9);4;0;" , 128 , 0 , 0 , 0 ]
  .stabs [ "short _Fract:t(0,25)=r(0,9);1;0;" , 128 , 0 , 0 , 0 ]
  .stabs [ "long _Fract:t(0,26)=r(0,9);4;0;" , 128 , 0 , 0 , 0 ]
  .stabs [ "long long _Fract:t(0,27)=r(0,9);8;0;" , 128 , 0 , 0 , 0 ]
  .stabs [ "unsigned short _Fract:t(0,28)=r(0,9);1;0;" , 128 , 0 , 0 , 0 ]
  .stabs [ "unsigned _Fract:t(0,29)=r(0,9);2;0;" , 128 , 0 , 0 , 0 ]
  .stabs [ "unsigned long _Fract:t(0,30)=r(0,9);4;0;" , 128 , 0 , 0 , 0 ]
  .stabs [ "unsigned long long _Fract:t(0,31)=r(0,9);8;0;" , 128 , 0 , 0 , 0 ]
  .stabs [ "_Sat short _Fract:t(0,32)=r(0,9);1;0;" , 128 , 0 , 0 , 0 ]
  .stabs [ "_Sat _Fract:t(0,33)=r(0,9);2;0;" , 128 , 0 , 0 , 0 ]
  .stabs [ "_Sat long _Fract:t(0,34)=r(0,9);4;0;" , 128 , 0 , 0 , 0 ]
  .stabs [ "_Sat long long _Fract:t(0,35)=r(0,9);8;0;" , 128 , 0 , 0 , 0 ]
  .stabs [ "_Sat unsigned short _Fract:t(0,36)=r(0,9);1;0;" , 128 , 0 , 0 , 0 ]
  .stabs [ "_Sat unsigned _Fract:t(0,37)=r(0,9);2;0;" , 128 , 0 , 0 , 0 ]
  .stabs [ "_Sat unsigned long _Fract:t(0,38)=r(0,9);4;0;" , 128 , 0 , 0 , 0 ]
  .stabs [ "_Sat unsigned long long _Fract:t(0,39)=r(0,9);8;0;" , 128 , 0 , 0 , 0 ]
  .stabs [ "short _Accum:t(0,40)=r(0,9);2;0;" , 128 , 0 , 0 , 0 ]
  .stabs [ "long _Accum:t(0,41)=r(0,9);8;0;" , 128 , 0 , 0 , 0 ]
  .stabs [ "long long _Accum:t(0,42)=r(0,9);8;0;" , 128 , 0 , 0 , 0 ]
  .stabs [ "unsigned short _Accum:t(0,43)=r(0,9);2;0;" , 128 , 0 , 0 , 0 ]
  .stabs [ "unsigned _Accum:t(0,44)=r(0,9);4;0;" , 128 , 0 , 0 , 0 ]
  .stabs [ "unsigned long _Accum:t(0,45)=r(0,9);8;0;" , 128 , 0 , 0 , 0 ]
  .stabs [ "unsigned long long _Accum:t(0,46)=r(0,9);8;0;" , 128 , 0 , 0 , 0 ]
  .stabs [ "_Sat short _Accum:t(0,47)=r(0,9);2;0;" , 128 , 0 , 0 , 0 ]
  .stabs [ "_Sat _Accum:t(0,48)=r(0,9);4;0;" , 128 , 0 , 0 , 0 ]
  .stabs [ "_Sat long _Accum:t(0,49)=r(0,9);8;0;" , 128 , 0 , 0 , 0 ]
  .stabs [ "_Sat long long _Accum:t(0,50)=r(0,9);8;0;" , 128 , 0 , 0 , 0 ]
  .stabs [ "_Sat unsigned short _Accum:t(0,51)=r(0,9);2;0;" , 128 , 0 , 0 , 0 ]
  .stabs [ "_Sat unsigned _Accum:t(0,52)=r(0,9);4;0;" , 128 , 0 , 0 , 0 ]
  .stabs [ "_Sat unsigned long _Accum:t(0,53)=r(0,9);8;0;" , 128 , 0 , 0 , 0 ]
  .stabs [ "_Sat unsigned long long _Accum:t(0,54)=r(0,9);8;0;" , 128 , 0 , 0 , 0 ]
  .stabs [ "void:t(0,4)" , 128 , 0 , 0 , 0 ]
  .stabs [ "wchar_t:t(0,55)=r(0,55);-32768;32767;" , 128 , 0 , 0 , 0 ]
  .stabs [ "char16_t:t(0,56)=r(0,56);0;0177777;" , 128 , 0 , 0 , 0 ]
  .stabs [ "char32_t:t(0,57)=@s32;r(0,57);0;037777777777;" , 128 , 0 , 0 , 0 ]
  .stabs [ "bool:t(0,58)=@s8;-16;" , 128 , 0 , 0 , 0 ]
  .stabs [ "__vtbl_ptr_type:t(0,59)=*(0,60)=f(0,9)" , 128 , 0 , 0 , 0 ]
  .stabs [ "decltype(nullptr):t(0,61)=(0,61)" , 128 , 0 , 0 , 0 ]
  .section [ .text .startup , "ax" , @ progbits ]
  .stabs [ "main:F(0,9)" , 36 , 0 , 3 , main /* $0000 */ ]
  .stabs [ "argc:P(0,9)" , 64 , 0 , 3 , 24 ]
  .stabs [ "argv:P(0,62)=*(0,63)=*(0,64)=k(0,17)" , 64 , 0 , 3 , 22 ]
  .global [ main /* $0000 */ ]
  .type [ main /* $0000 */ , @ function ]

main: /* $0000 */

  .stabd [ 46 , 0 , 0 ]
  .stabn [ 68 , 0 , 4 , .LM0 /* $0000 */ - .LFBB1 /* $0000 */ ]

.LM0: /* $0000 */


.LFBB1: /* $0000 */


/* prologue: function */


/* frame size = 0 */


/* stack size = 0 */

	.L__stack_usage = 0

.LBB2: /* $0000 */

  .stabn [ 68 , 0 , 5 , .LM1 /* $0000 */ - .LFBB1 /* $0000 */ ]

.LM1: /* $0000 */

/* $0000 */ ldi [ r25 , 0 ]
/* $0002 */ ldi [ r24 , 0 ]
  .stabn [ 68 , 0 , 7 , .LM2 /* $0004 */ - .LFBB1 /* $0000 */ ]

.LM2: /* $0004 */

/* $0004 */ ldi [ r18 , lo8 1 ]

.L2: /* $0006 */

  .stabn [ 68 , 0 , 7 , .LM3 /* $0006 */ - .LFBB1 /* $0000 */ ]

.LM3: /* $0006 */

/* $0006 */ lds [ ZL , TEST_PTR /* $0021 */ ]
/* $000a */ lds [ ZH , expr_node( TEST_PTR /* $0021 */ + 1 ) ]
/* $000e */ add [ ZL , r24 ]
/* $0010 */ adc [ ZH , r25 ]
/* $0012 */ st [ Z , r18 ]
  .stabn [ 68 , 0 , 5 , .LM4 /* $0014 */ - .LFBB1 /* $0000 */ ]

.LM4: /* $0014 */

/* $0014 */ adiw [ r24 , 1 ]
/* $0016 */ cpi [ r24 , 40 ]
/* $0018 */ cpc [ r25 , __zero_reg__ ]
/* $001a */ brne [ .L2 /* $0006 */ ]

.LBE2: /* $001c */

  .stabn [ 68 , 0 , 10 , .LM5 /* $001c */ - .LFBB1 /* $0000 */ ]

.LM5: /* $001c */

/* $001c */ ldi [ r25 , 0 ]
/* $001e */ ldi [ r24 , 0 ]

/* epilogue start */

/* $0020 */ ret [ ]
  .size [ main /* $0000 */ , . - main /* $0000 */ ]
  .stabs [ "i:r(0,9)" , 64 , 0 , 5 , 24 ]
  .stabn [ 192 , 0 , 0 , .LBB2 /* $0000 */ - .LFBB1 /* $0000 */ ]
  .stabn [ 224 , 0 , 0 , .LBE2 /* $001c */ - .LFBB1 /* $0000 */ ]

.Lscope1: /* $0021 */

  .stabs [ "" , 36 , 0 , 0 , .Lscope1 /* $0021 */ - .LFBB1 /* $0000 */ ]
  .stabd [ 78 , 0 , 0 ]
  .global [ TEST_PTR /* $0021 */ ]
  .data [ ]
  .type [ TEST_PTR /* $0021 */ , @ object ]
  .size [ TEST_PTR /* $0021 */ , 2 ]

TEST_PTR: /* $0021 */

  .word [ - 10240 ]
  .stabs [ "TEST_PTR:G(0,65)=*(0,66)=B(0,17)" , 32 , 0 , 1 , 0 ]
  .text [ ]
  .stabs [ "" , 100 , 0 , 0 , .Letext0 /* $0023 */ ]

.Letext0: /* $0023 */

  .ident [ "GCC: (GNU) 7.1.0" ]
  .global [ __do_copy_data ]
